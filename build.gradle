buildscript {
	ext {
	    springBootVersion = "${springBootVersion}"
	}
	repositories {
		mavenCentral()
	}
	dependencies {
	    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
	ext.customSecurityRef = ""
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin:'groovy'

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "http://repo1.maven.org/maven2" }
}
  
  
allprojects {
	apply plugin: "java"
	apply plugin: "eclipse"
	//apply plugin: "pmd"
	// apply plugin: "findbugs"
	//apply plugin: "checkstyle"
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "http://repo1.maven.org/maven2" }
	}	
	   
	dependencies {
		compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
	}
	tasks.withType(JavaCompile) {  
		options.encoding = "UTF-8"  
	}
}
subprojects {
	apply plugin: "java"
	apply plugin: "eclipse"

	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "http://repo1.maven.org/maven2" }
		
	}
	jar {
		manifest {
			attributes("Implementation-Title": project.name,
			        "Implementation-Vendor": project.group,
			        "Created-By": project.group,
			        "Implementation-Version": project.version)
		}
	}
	eclipse {
		classpath {
			containers.remove("org.eclipse.jdt.launching.JRE_CONTAINER")
			defaultOutputDir = file('build')
		}
	}
	tasks.withType(JavaCompile) {  
		options.encoding = "UTF-8"  
	}
	task wrapper(type: Wrapper) {
		gradleVersion = "${gradleVersion}"
	}   
}
	
   
	
task startCrm(dependsOn: 'crm:erun') << {

}
task startUpm(dependsOn: 'e-upm:erun') << {

}
task startCas(dependsOn: 'server-cas:erun') << {

}
task startPortal(dependsOn: 'e-portal:erun') << {

}
task startProxy(dependsOn: 'server-proxy:erun') << {

}

